import random
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
random.random()
def Hamiltonian(mas):
  summ = 0
  for i in range(len(mas)):
    for j in range(len(mas)-1):
      summ+=mas[i][j]*mas[i][j+1]+mas.T[i][j]*mas.T[i][j+1]
    summ+=mas[i][0]*mas[i][len(mas)-1]+mas.T[i][0]*mas.T[i][len(mas.T)-1]
  return -summ
def m(lst):
  M = 0
  for i in range(len(lst, T)):
    for j in range(len(lst)):
      M += lst[i][j]
  return M
def create_mat(n):
  lst = np.zeros([n, n], dtype = int)
  for i in range(n):
      for j in range(n):
        lst[i][j] = random.choice((-1, 1))
  return lst
def one_mon_car_step(lst):
  H1 = Hamiltonian(lst)
  i = random.randint(0, len(lst)-1)
  j = random.randint(0, len(lst)-1)
  lst[i,j] *= -1
  H2 = Hamiltonian(lst)
  if (H2 - H1) < 0:
    return H1
  else:
    p = np.exp(-(H2-H1)/T)
    b = random.random()
    if b > p:
      lst[i,j] *= -1
    else:
      return H1
def one_temperature_iteration(mon_car_step, lst, T):
  data_1 = ([])
  data_2 = ([])
  c = 0
  while c != mon_car_step:
    c += 1
    H1 = one_mon_car_step(lst)
    np.append(data_1, H1**2)
    np.append(data_2, H1)
  C = (np.mean(data_1) - (np.mean(data_2))**2)/T
  return C

  lst4 = np.append(lst4, C)
lst5 = np.linspace(1, 2.6, 25)
print(l)
print(lst4)
plt.scatter(lst5, lst4)
